<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xueqiang.Zhang Blog</title>
  <subtitle>我的笔记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-08-16T13:38:59.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>张学强</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>java IO流</title>
    <link href="http://yoursite.com/2017/08/16/IO/"/>
    <id>http://yoursite.com/2017/08/16/IO/</id>
    <published>2017-08-16T13:39:02.891Z</published>
    <updated>2017-08-16T13:38:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>流是一种抽象概念，它代表了数据的无结构化传递。按照流的方式进行输入输出，数据被当成无结构的字节序或字符序列。从流中取得数据的操作称为提取操作，而向流中添加数据的操作称为插入操作。用来进行输入输出操作的流就称为IO流。换句话说，IO流就是以流的方式进行输入输出</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="http://music.163.com/outchain/player?type=2&id=32192436&auto=1&height=32"></iframe>


<h2 id="流分为输入流和输出流，还可分为字节流字符流"><a href="#流分为输入流和输出流，还可分为字节流字符流" class="headerlink" title="流分为输入流和输出流，还可分为字节流字符流"></a>流分为输入流和输出流，还可分为字节流字符流</h2><h3 id="输入流"><a href="#输入流" class="headerlink" title="输入流"></a>输入流</h3><p>定义：我们把能够读取一个字节序列的对象称作一个输入流;而我们把能够写一个字节序列称作一个输出流<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">常用的字节输入流：</div><div class="line">inputstream: 抽象类，是所有的字节输入流的父类，它implements Closeable接口 该接口中有close方法。</div><div class="line">attribute:  private static final int MAX_SKIP_BUFFER_SIZE = 2048;</div><div class="line">method : </div><div class="line">public abstract int <span class="built_in">read</span>() throws IOException : 从输入流中读取下个字节 ，如果有字节被读取则返回一个 int 的值 从 0 到 255 ，返回的值是其字节长度，如果没有字节被读取，也就是读到流结束则返回-1。所有的子类都要实现该类。</div><div class="line">public int <span class="built_in">read</span>(byte b[]) throws IOException ：<span class="built_in">return</span> <span class="built_in">read</span>(b, 0, b.length); 这个方法其实方法体中调用改抽象类的另一个重载方法。就是下面这个方法。</div><div class="line">public int <span class="built_in">read</span>(byte b[], int off, int len) ： throws IOException offer 参数为数组的偏移数 。</div><div class="line">public long skip(long n) throws IOException ：参数为要跳过的字符字节数，方法返回实际跳过的字节数。</div><div class="line">public int available() throws IOException   <span class="built_in">return</span> 0; 这个类中并没有具体的实现，要子类去具体实现，此方法返回的字节数保持从此输入流中读取而不阻塞。</div><div class="line">public void close() throws IOException :不多说了,这个方法定义的意义是释放系统资源和相关的流.</div><div class="line">public synchronized void mark(int readlimit) ：标记当前位置最多读取之后的 readlimit 个字节。 </div><div class="line">public synchronized void reset() throws IOException ：这个方法和mark方法一起使用的，让stream回到mark的位置</div><div class="line">public boolean markSupported() 是否支持标记；</div></pre></td></tr></table></figure></p>
<p>常用子类：<br><img src="/2017/08/16/IO/IO.png" alt="常用的输入字节流"><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure></p>
<h3 id="输出流"><a href="#输出流" class="headerlink" title="输出流"></a>输出流</h3><p>定义：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">常用的输出流：</div><div class="line">OutputStream</div></pre></td></tr></table></figure></p>
<h3 id="字节流"><a href="#字节流" class="headerlink" title="字节流"></a>字节流</h3><p>定义<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">常用的字节流：</div></pre></td></tr></table></figure></p>
<h3 id="字符流"><a href="#字符流" class="headerlink" title="字符流"></a>字符流</h3><p>定义<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">常用的字符流：</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;流是一种抽象概念，它代表了数据的无结构化传递。按照流的方式进行输入输出，数据被当成无结构的字节序或字符序列。从流中取得数据的操作称为提取操作，而向流中添加数据的操作称为插入操作。用来进行输入输出操作的流就称为IO流。换句话说，IO流就是以流的方式进行输入输出&lt;/p&gt;
&lt;if
    
    </summary>
    
    
  </entry>
  
</feed>
